{"version":3,"sources":["../../src/panel/module.js"],"names":["PanelCtrl","loadPluginCss","triggerPanelEditor","$","getChinaMapOption","getTestOption","Echarts","System","amdRequire","echarts","dark","light","panelDefaults","datasource","scroll","fontSize","EchartsAppPanelCtrl","$scope","$injector","$element","datasourceSrv","templateSrv","contextSrv","dashboardSrv","pageIndex","triggerList","queryType","currentTriggersPage","_","defaults","panel","cloneDeep","console","log","events","on","onInitEditMode","bind","onRefresh","addEditorTab","otherPanelInFullscreenMode","error","loading","refreshData","then","trigger","list","type","renderPanel","get","getTriggers","option","chart","init","setOption","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["/**\n * Grafana-Echarts\n * Echarts plugin for Grafana.\n * Trigger panel.\n * @author JiM_Hao 2017-11-17\n */\n\nimport { PanelCtrl } from 'app/plugins/sdk';\nimport { loadPluginCss } from 'app/plugins/sdk';\nimport { triggerPanelEditor } from './editor';\nimport $ from 'jquery';\n\nimport { getChinaMapOption, getTestOption } from '../js/EchartsOptionsUtils'\n\nimport '../css/echarts-app.css!'\n\nlet Echarts;\nSystem.amdRequire([\"plugins/grafana-echarts-app/echarts/npm/echarts.min.js\"], (echarts) => {\n  Echarts = echarts;\n});\n\nloadPluginCss({\n  dark: 'plugins/grafana-echarts-app/css/dark.css',\n  light: 'plugins/grafana-echarts-app/css/light.css'\n});\n\nvar panelDefaults = {\n  datasource: null,\n  scroll: true,\n  fontSize: '100%'\n}\n\nclass EchartsAppPanelCtrl extends PanelCtrl {\n  constructor($scope, $injector, $element, datasourceSrv, templateSrv, contextSrv, dashboardSrv) {\n    super($scope, $injector);\n    // 私有化\n    this.datasourceSrv = datasourceSrv;\n    this.templateSrv = templateSrv;\n    this.contextSrv = contextSrv;\n    this.dashboardSrv = dashboardSrv;\n    // 页面索引\n    this.pageIndex = 0;\n    // 数据列表\n    this.triggerList = [];\n    // 查询类型\n    this.queryType = 'click';\n    this.currentTriggersPage = [];\n    // 合并对象\n    _.defaults(this.panel, _.cloneDeep(panelDefaults));\n\n    console.log(this);\n    console.log('面板初始化');\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n  }\n\n  /**\n   * 编辑时触发函数\n   */\n  onInitEditMode() {\n    this.addEditorTab('Options', triggerPanelEditor, 2);\n  }\n\n  /**\n   * 刷新触发函数\n   */\n  onRefresh () {\n    // 如果有一个面板全屏，那么忽略此操作\n    if (this.otherPanelInFullscreenMode()) { return; }\n    \n    // 清除错误，准备开始加载数据\n    delete this.error;\n    this.loading = true;\n    console.log('数据初始化');\n\n    return this.refreshData()\n      .then(trigger => {\n        this.loading = false;\n        this.triggerList = trigger.list;\n        this.queryType = trigger.type;\n        this.renderPanel();\n      })\n  }\n\n  refreshData () {\n    console.log(this.datasourceSrv);\n    return this.datasourceSrv.get(this.panel.datasource)\n      .then(datasource => {\n        return this.getTriggers();\n      });\n  }\n\n  getTriggers () {\n    return {\n      list: [\n        {\n          \"parentarea\": \"北京市\",\n          \"click\": 897\n        },\n        {\n          \"parentarea\": \"海外\",\n          \"click\": 98\n        },\n        {\n          \"parentarea\": \"江苏省\",\n          \"click\": 200\n        },\n        {\n          \"parentarea\": \"辽宁省\",\n          \"click\": 340\n        },\n        {\n          \"parentarea\": \"吉林省\",\n          \"click\": 120\n        }\n      ],\n      type: 'click'\n    }\n  }\n\n  renderPanel () {\n    // let option = getChinaMapOption(this.triggerList, this.queryType);\n    let option = getTestOption();\n    let chart = Echarts.init($('.triggers-panel-charts')[0]);\n    chart.setOption(option, true);\n  }\n}\nEchartsAppPanelCtrl.templateUrl = 'panel/module.html';\n\nexport {\n  EchartsAppPanelCtrl as PanelCtrl\n};\n"]}